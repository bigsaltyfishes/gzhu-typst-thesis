variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

default:
  image: rust
  cache:
    paths:
      - $CARGO_HOME

stages:
    - check
    - release

# each merge request are required to ensure compiling the `.typ`s file successfully.
check-typst-compile:
  stage: check
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG
  before_script:
    - export PATH="$PATH:$CARGO_HOME/bin"
    - cargo install typst-cli
  script:
    - typst compile
        --root=$CI_PROJECT_DIR
        --font-path=$CI_PROJECT_DIR/fonts
        $CI_PROJECT_DIR/template/thesis.typ
        $CI_PROJECT_DIR/thesis_preview.pdf
  # TODO(#1): the preview pdf should be generated by template repo
  # artifacts:
  #   paths:
  #     - $CI_PROJECT_DIR/thesis_preview.pdf

release-commit:
  stage: release
  rules:
    # - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    #   when: manual
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  before_script:
    - export PATH="$PATH:$CARGO_HOME/bin"
    - cargo install git-cliff sd
    - |
      curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
      apt-get install git-lfs
  script:
    - |
      git config user.name $GITLAB_USER_NAME
      git config user.email $GITLAB_USER_EMAIL
    - |
      git remote rm ci || true
      git remote add ci "https://sysu-bot:$SYSU_BOT_TOKEN@gitlab.com/sysu-gitlab/thesis-template/better-thesis.git"
    - |
      BUMPED_VERSION=$(git cliff --bumped-version --unreleased)
      git cliff --bump --unreleased -- --newest > release-note.md
    - |
      sd 'version = ".*"' "version = \"$BUMPED_VERSION\"" $CI_PROJECT_DIR/typst.toml
      sd 'version = "v(.*)"' 'version = \"$1\"' $CI_PROJECT_DIR/typst.toml
      git add $CI_PROJECT_DIR/typst.toml
    - |
      git cliff --unreleased --tag $BUMPED_VERSION --prepend CHANGELOG.md -- --newest
      git add $CI_PROJECT_DIR/CHANGELOG.md
    - git status
    - |
      git commit -m "chore(release):prepare for $BUMPED_VERSION"
      git tag $BUMPED_VERSION --file=release-note.md
    - git push ci HEAD:$CI_COMMIT_BRANCH
    - git push ci HEAD:$CI_COMMIT_BRANCH --tags

gitlab-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "releasing $CI_COMMIT_TAG on GitLab!"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG_MESSAGE'
