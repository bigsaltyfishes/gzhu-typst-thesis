variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

default:
  image: rust
  cache:
    paths:
      - $CARGO_HOME

stages:
    - check
    - release

# each merge request are required to ensure compiling the `.typ`s file successfully.
check-typst-compile:
  stage: check
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG =~ /v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)/
  before_script:
    - export PATH="$PATH:$CARGO_HOME/bin"
    - cargo install typst-cli
  script:
    - typst compile
        --root=$CI_PROJECT_DIR
        --font-path=$CI_PROJECT_DIR/fonts
        $CI_PROJECT_DIR/template/thesis.typ
        $CI_PROJECT_DIR/thesis_preview.pdf
  # TODO(#1): the preview pdf should be generated by template repo
  # artifacts:
  #   paths:
  #     - $CI_PROJECT_DIR/thesis_preview.pdf

release-commit:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "web"
  before_script:
    - export PATH="$PATH:$CARGO_HOME/bin"
    - cargo install git-cliff sd
    - |
      curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
      apt-get install git-lfs
    - |
      git config user.name $GITLAB_USER_NAME
      git config user.email $GITLAB_USER_EMAIL
    - git remote add ci "https://sysu-bot:$SYSU_BOT_TOKEN@gitlab.com/sysu-gitlab/thesis-template/better-thesis.git"
    - git pull ci $CI_COMMIT_BRANCH --tags
  script:
    - |
      BUMPED_VERSION=$(git cliff --bumped-version --unreleased)
      SEMVER=$(echo $BUMPED_VERSION | sd 'v(.*)' '$1')
      git cliff --bump --unreleased > release-note.md
    - |
      sd 'version = ".*"' "version = \"$SEMVER\"" $CI_PROJECT_DIR/typst.toml
      git add $CI_PROJECT_DIR/typst.toml
    - |
      sd '"@preview/modern-sysu-thesis:.*"' "\"@preview/modern-sysu-thesis:$SEMVER\"" $CI_PROJECT_DIR/template/thesis.typ
      git add $CI_PROJECT_DIR/template/thesis.typ
    - |
      git cliff --unreleased --tag $BUMPED_VERSION --prepend CHANGELOG.md
      git add $CI_PROJECT_DIR/CHANGELOG.md
    - git status
    - |
      git commit -m "chore(release):prepare for $BUMPED_VERSION"
      git tag $BUMPED_VERSION --file=release-note.md
    - git push ci HEAD:$CI_COMMIT_BRANCH --tags
  after_script:
    - git remote rm ci

gitlab-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG =~ /v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)/
  script:
    - echo "releasing $CI_COMMIT_TAG on GitLab!"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG_MESSAGE'

typst.universe-release:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG =~ /v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)/
  before_script:
    - export PATH="$PATH:$CARGO_HOME/bin"
    - cargo install sd
    - SEMVER=$(echo $CI_COMMIT_TAG | sd 'v(.*)' '$1')
    - |
      git clone https://sysu:$TYPST_PACKAGES_FORK_TOKEN@github.com/sysu/packages.git typst-universe
    - cd typst-universe/packages/preview/modern-sysu-thesis/
    - |
      git config user.name $GITLAB_USER_NAME
      git config user.email $GITLAB_USER_EMAIL
  script:
    - |
      git switch main
      git switch -c $SEMVER
    - |
      mkdir $SEMVER
      cd $SEMVER
    - |
      cp $CI_PROJECT_DIR/LICENSE .
      cp $CI_PROJECT_DIR/README.md .
      cp $CI_PROJECT_DIR/typst.toml .
      cp $CI_PROJECT_DIR/thumbnail.png .
      cp $CI_PROJECT_DIR/lib.typ .
      cp -r $CI_PROJECT_DIR/assets .
      cp -r $CI_PROJECT_DIR/layouts .
      cp -r $CI_PROJECT_DIR/utils .
      cp -r $CI_PROJECT_DIR/pages .
      cp -r $CI_PROJECT_DIR/specifications .
      cp -r $CI_PROJECT_DIR/template .
    - |
      sd '// #import "@preview/modern-sysu-thesis:' '#import "@preview/modern-sysu-thesis:' ./template/thesis.typ
      sd '#import "/lib.typ":' '// #import "lib.typ":' ./template/thesis.typ
    - git status
    - git add .
    - git commit -m "chore(release):prepare for modern-sysu-thesis:$SEMVER"
    - git push --set-upstream origin $SEMVER
  after_script:
    - rm -r typst-universe
