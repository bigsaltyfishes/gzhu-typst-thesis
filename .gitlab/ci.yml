image: rust
variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

cache:
  paths:
    - $CARGO_HOME

stages:
    - check
    - release

before_script:
  - export PATH="$PATH:$CARGO_HOME/bin"
  - cargo install typst-cli git-cliff sd

# each merge request are required to ensure compiling the `.typ`s file successfully.
check-merge-request:
  stage: check
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  script:
    - typst compile --root=$CI_PROJECT_DIR --font-path=$CI_PROJECT_DIR/fonts $CI_PROJECT_DIR/template/thesis.typ

check-default-branch:
  stage: check
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - typst compile --root=$CI_PROJECT_DIR --font-path=$CI_PROJECT_DIR/fonts $CI_PROJECT_DIR/template/thesis.typ $CI_PROJECT_DIR/thesis_preview.pdf
  # TODO(#1): the preview pdf should be generated by template repo
  # artifacts:
  #   paths:
  #     - $CI_PROJECT_DIR/thesis_preview.pdf

release-commit:
  stage: release
  rules:
    - if: ($CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH) && ($CI_PIPELINE_SOURCE == "web")
  script:
    - git config user.name $GITLAB_USER_NAME && git config user.email $GITLAB_USER_EMAIL
    - |
      VERSION=$(git cliff --bumped-version --unreleased)
      git cliff --bump --unreleased > release-note.md
    - |
      sd 'version = ".*"' 'version = "$VERSION"' $CI_PROJECT_DIR/typst.toml
    - |
      git add $CI_PROJECT_DIR/* && git commit -m "ci(release):$VERSION"
      git tag $VERSION -m --file=release-note.md
      git push --tags

gitlab-release:
  stage: release
  needs:
    - release-commit
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "releasing $CI_COMMIT_TAG on GitLab!"
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && '$CI_COMMIT_TAG'
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG_MESSAGE'
